/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as ServerDownIndexImport } from './routes/server-down/index'
import { Route as LoginIndexImport } from './routes/login/index'
import { Route as AuthHomeImport } from './routes/_auth/home'
import { Route as AuthHomeIndexImport } from './routes/_auth/home/index'
import { Route as AuthHomeRoomIdIndexImport } from './routes/_auth/home/$roomId/index'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ServerDownIndexRoute = ServerDownIndexImport.update({
  id: '/server-down/',
  path: '/server-down/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const AuthHomeRoute = AuthHomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthRoute,
} as any)

const AuthHomeIndexRoute = AuthHomeIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthHomeRoute,
} as any)

const AuthHomeRoomIdIndexRoute = AuthHomeRoomIdIndexImport.update({
  id: '/$roomId/',
  path: '/$roomId/',
  getParentRoute: () => AuthHomeRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_auth/home': {
      id: '/_auth/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthHomeImport
      parentRoute: typeof AuthImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/server-down/': {
      id: '/server-down/'
      path: '/server-down'
      fullPath: '/server-down'
      preLoaderRoute: typeof ServerDownIndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth/home/': {
      id: '/_auth/home/'
      path: '/'
      fullPath: '/home/'
      preLoaderRoute: typeof AuthHomeIndexImport
      parentRoute: typeof AuthHomeImport
    }
    '/_auth/home/$roomId/': {
      id: '/_auth/home/$roomId/'
      path: '/$roomId'
      fullPath: '/home/$roomId'
      preLoaderRoute: typeof AuthHomeRoomIdIndexImport
      parentRoute: typeof AuthHomeImport
    }
  }
}

// Create and export the route tree

interface AuthHomeRouteChildren {
  AuthHomeIndexRoute: typeof AuthHomeIndexRoute
  AuthHomeRoomIdIndexRoute: typeof AuthHomeRoomIdIndexRoute
}

const AuthHomeRouteChildren: AuthHomeRouteChildren = {
  AuthHomeIndexRoute: AuthHomeIndexRoute,
  AuthHomeRoomIdIndexRoute: AuthHomeRoomIdIndexRoute,
}

const AuthHomeRouteWithChildren = AuthHomeRoute._addFileChildren(
  AuthHomeRouteChildren,
)

interface AuthRouteChildren {
  AuthHomeRoute: typeof AuthHomeRouteWithChildren
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthHomeRoute: AuthHomeRouteWithChildren,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/home': typeof AuthHomeRouteWithChildren
  '/login': typeof LoginIndexRoute
  '/server-down': typeof ServerDownIndexRoute
  '/home/': typeof AuthHomeIndexRoute
  '/home/$roomId': typeof AuthHomeRoomIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteWithChildren
  '/login': typeof LoginIndexRoute
  '/server-down': typeof ServerDownIndexRoute
  '/home': typeof AuthHomeIndexRoute
  '/home/$roomId': typeof AuthHomeRoomIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_auth/home': typeof AuthHomeRouteWithChildren
  '/login/': typeof LoginIndexRoute
  '/server-down/': typeof ServerDownIndexRoute
  '/_auth/home/': typeof AuthHomeIndexRoute
  '/_auth/home/$roomId/': typeof AuthHomeRoomIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/home'
    | '/login'
    | '/server-down'
    | '/home/'
    | '/home/$roomId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/login' | '/server-down' | '/home' | '/home/$roomId'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_auth/home'
    | '/login/'
    | '/server-down/'
    | '/_auth/home/'
    | '/_auth/home/$roomId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
  ServerDownIndexRoute: typeof ServerDownIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
  ServerDownIndexRoute: ServerDownIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/login/",
        "/server-down/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/home"
      ]
    },
    "/_auth/home": {
      "filePath": "_auth/home.tsx",
      "parent": "/_auth",
      "children": [
        "/_auth/home/",
        "/_auth/home/$roomId/"
      ]
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/server-down/": {
      "filePath": "server-down/index.tsx"
    },
    "/_auth/home/": {
      "filePath": "_auth/home/index.tsx",
      "parent": "/_auth/home"
    },
    "/_auth/home/$roomId/": {
      "filePath": "_auth/home/$roomId/index.tsx",
      "parent": "/_auth/home"
    }
  }
}
ROUTE_MANIFEST_END */
